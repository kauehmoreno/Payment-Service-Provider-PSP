version: "3.7"

services:
  frontend:
    image: traefik:v2.0
    command: 
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--api.dashboard=true"
      - "--api"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.useBindPortIP=true"
      - "--entrypoints.web.address=:80"
      - "--metrics.prometheus=true"
      - "--tracing=true"
      - "--tracing.jaeger=true"
      - "--tracing.jaeger.samplingType=const"
      - "--tracing.jaeger.samplingParam=1.0"
      - "--tracing.jaeger.samplingServerURL=http://localhost:5778/sampling"
      - "--tracing.jaeger.localAgentHostPort=127.0.0.1:6831"
      - "--tracing.jaeger.traceContextHeaderName=psp-trace-id"
      - "--tracing.jaeger.collector.user=psp"
      - "--tracing.jaeger.collector.password=psp-password"
      - "--tracing.serviceName=backend"
      - "--tracing.spanNameLimit=150"
      - "--accesslog=true"
      - "--accesslog.filepath=/path/to/access.log"
      - "--accesslog.bufferingsize=100"
      - "--accesslog.format=json"
      - "--accesslog.filters.statuscodes=200,300-302"
      - "--accesslog.filters.retryattempts"
      - "--accesslog.filters.minduration=10ms"
    depends_on: 
      - backend
    labels: 
      - "traefik.http.routers.frontend.entrypoints=web"
    ports: 
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  backend:
    container_name: psp
    build: .
    ports: 
      - "8000:8000"
    environment: 
      - APP_PORT=8000
      - APP_NAME=psp
      - APP_SERVICE=backend
      - DB_URL=mongodb://database:27017
      - DB_LOGIN=psp-login
      - DB_PASSWORD=psp-password
      - DB_DATABASE=psp
      - NATS_USER=psp-nats-user
      - NATS_PASS=I7%RHG!hbx$t4@obk8
      - NATS_URL=nats://broker:4222
    labels: 
      - traefik.enable=true
      - "traefik.http.routers.backendrouter.entrypoints=web"
      - "traefik.http.routers.backendrouter.rule=Host(`api.localhost`)"
      - "traefik.http.routers.backend.service=backend"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "traefik.http.services.backend.loadbalancer.server.scheme=http"
      - "traefik.http.services.backend.loadbalancer.healthcheck.path=/healthcheck"
      - "traefik.http.services.backend.loadbalancer.healthcheck.port=8000"
      - "traefik.http.services.backend.loadbalancer.healthcheck.timeout=5s"
      - "traefik.http.services.backend.loadbalancer.healthcheck.interval=10s"
      - "traefik.http.middlewares.test-compress.compress=true"
      - "traefik.http.middlewares.latency-check.circuitbreaker.expression=LatencyAtQuantileMS(50.0) > 100"
    depends_on: 
      - cache
      - database
    volumes: 
      - ./dist :/home/node/app
  cache:
    image: redis:5.0.5-alpine
    restart: always
    labels: 
      - traefik.enable=false
    ports:
      - 26379:26379
  database:
      image: mongo
      labels: 
        - traefik.enable=false
      restart: always
      environment: 
        MONGO_INITDB_ROOT_USERNAME: psp-user
        MONGO_INITDB_ROOT_PASSWORD: psp-password
  broker:
    image: nats:2.0.0-linux
    expose: 
      - "4222"
    ports:
      - "8222:8222"
  worker-payable:
    container_name: psp-worker
    build: 
      context: .
      dockerfile: worker/Dockerfile
    restart: always
    environment:
      - NATS_USER=psp-nats-user
      - NATS_PASS=I7%RHG!hbx$t4@obk8
      - NATS_URL=nats://broker:4222
    depends_on: 
      - cache
      - broker
      - database
